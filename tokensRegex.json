[
  {
    "regex": "class",
    "description": "class"
  },
  {
    "regex": "var",
    "description": "declaration"
  },
  {
    "regex": "func",
    "description": "function"
  },
  {
    "regex": "package",
    "description": "package"
  },
  {
    "regex": "int ",
    "description": "int_type"
  },
  {
    "regex": "{",
    "description": "bracket"
  },
  {
    "regex": "}",
    "description": "bracket"
  },
  {
    "regex": "(",
    "description": "lparen"
  },
  {
    "regex": ")",
    "description": "rparen"
  },
  {
    "regex": "Program",
    "description": "program"
  },
  {
    "regex": "[a-zA-Z_]+",
    "description": "identifier"
  },
  {
    "regex": "true",
    "description": "bool_literal"
  },
  {
    "regex": "false",
    "description": "bool_literal"
  },
  {
    "regex": "0x[0-9a-fA-F]+",
    "description": "int_lit"
  },
  {
    "regex": "[0-9]+",
    "description": "int_lit"
  },
  {
    "regex": "\"[ -!#-~]+\"",
    "description": "string_literal"
  },
  {
    "regex": "'[ -!#-~]'",
    "description": "char_literal"
  },
  {
    "regex": "//[ -!#-~\r]+\n",
    "description": "comment"
  },
  {
    "regex": "==",
    "description": "eq_op"
  },
  {
    "regex": "!=",
    "description": "eq_op"
  },
  {
    "regex": "=",
    "description": "assign"
  },
  {
    "regex": "+",
    "description": "arith_op"
  },
  {
    "regex": "-",
    "description": "arith_op"
  },
  {
    "regex": "*",
    "description": "arith_op"
  },
  {
    "regex": "/",
    "description": "arith_op"
  },
  {
    "regex": "%",
    "description": "arith_op"
  },
  {
    "regex": "<",
    "description": "rel_op"
  }
  ,
  {
    "regex": ">",
    "description": "rel_op"
  }
  ,
  {
    "regex": "<=",
    "description": "rel_op"
  }
  ,
  {
    "regex": ">=",
    "description": "rel_op"
  },
  {
    "regex": " ",
    "description": "whitespace"
  },
  {
    "regex": "\n",
    "description": "whitespace"
  },
  {
    "regex": "\r",
    "description": "whitespace"
  },
  {
    "regex": "\t",
    "description": "whitespace"
  },
  {
    "regex": "\f",
    "description": "whitespace"
  }
]